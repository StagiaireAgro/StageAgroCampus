---
title: "socleo_2021_analyse_levels"
format: html
editor: visual
---

# I) Chargement des bibliothèques nécessaires

```{r,message=FALSE}

# Pour lire les fichiers CSV
library(readr)

# Pour manipuler et détecter les chaînes de caractères
library(stringr)

# Pour gérer les accents et normaliser les chaînes
library(stringi)

# Pour créer des graphiques plus sophistiqués
library(ggplot2)

# Pour exporter des datafrales au format Excel
library(openxlsx)

```

# II) Importation des fichiers

```{r,message=FALSE}
########################## Socleo ########################## 

data_socleo_2021 <- vroom("data/socleo/2021/toutsocleo_2021.csv",
                          locale = vroom::locale(encoding = "UTF-8"))

########################## coop circuit ########################## 

data_coop_circuit_2021 <- read.csv("data/coop circuit/par annee/2021.csv",sep = ",")
data_coop_circuit_2022 <- read.csv("data/coop circuit/par annee/2022.csv",sep = ";")
data_coop_circuit_2023 <- read.csv("data/coop circuit/par annee/2023.csv",sep = ";")
data_coop_circuit_2024 <- read.csv("data/coop circuit/par annee/2024.csv",sep = ";")

########################## la ruche qui dit oui ########################## 

data_ruche_oui_2021_part_1 <- 
  read.csv("data/la ruche qui dit oui/historique_2021part1.csv",sep = ";")
data_ruche_oui_2021_part_2 <- 
  read.csv("data/la ruche qui dit oui/historique_2021part1.csv",sep = ";")
data_ruche_oui_2022 <- read.csv("data/la ruche qui dit oui/historique_2022.csv",sep = ";")
data_ruche_oui_2023 <- read.csv("data/la ruche qui dit oui/historique_2023.csv",sep = ";")
data_ruche_oui_2024 <- read.csv("data/la ruche qui dit oui/historique_2024.csv",sep = ";")
```

# III) Détermination des levels pour les carottes

```{r}
######### carotte
data_carotte <- liste_data_par_produit[["carotte"]]

carotte_levels <- levels(as.factor(data_carotte$name_clean))

carotte_levels

```


# IV) Analyse du nombre de déclinaisons par produits

## 1) Développement de la fonction pour comptabiliser le nombre de déclinaisons par produits

```{r,warning=FALSE}

compter_levels <- function(col_index, df) {
  # Extraire la colonne à partir de l'indice
  colonne <- df[[col_index]]
  
  # Récupérer les levels uniques (facteurs ou caractères)
  levels_col <- unique(colonne)
  
  # Utiliser sapply pour compter les occurrences de chaque level
  nb_occurrences <- sapply(levels_col, function(x) sum(colonne == x))
  
  # Construire le tableau de résultats
  result <- data.frame(
    Level = levels_col,
    N = nb_occurrences,
    row.names = NULL
  )
  
  return(result)
}


```

## 2) Application de la fonction pour comptabiliser le nombre de déclinaisons par produits

```{r}
########################## Socleo ########################## 

########################## 2021 

tableau_comptage_levels_carotte <- compter_levels(1, data_carotte)

```



```{r}
# Convertir proprement en UTF-8, supprimer caractères illisibles
tableau_comptage_levels_carotte$Level <- iconv(
  tableau_comptage_levels_carotte$Level,
  from = "",       # Auto-détection
  to = "UTF-8",
  sub = ""         # Supprime les caractères non convertibles
)

```

```{r}
# Rennommer les colonnes 

tableau_comptage_levels_carotte <- tableau_comptage_levels_carotte |> 
  rename("Nom du levels" = Level,
         "Nombre d'occurences" = N)
```


# V) Trie par ordre décroissant du nom de levels 

## a) Trie

```{r}
# Classer les levels des plus longs au moins longs
Tableau_tri_decroissant_nom <- tableau_comptage_levels_carotte %>%
  mutate(longueur = nchar(`Nom du levels`)) %>%
  arrange(desc(longueur)) %>%
  select(-longueur)

```

## b) Représentation graphique 

```{r}
########################## socleo ########################## 

########################## 2021

# Diagramme en barre du nombre de lignes par levels
ggplot(Tableau_tri_decroissant_nom)+aes(x=N,y=Level)+
  geom_bar(stat = "identity",fill = "#FF6666")
```

# VI) Trie des levels les plus récurrents au moins récurrents

## a) Trie

```{r}
# Classer des levels les plus récurrents au moins récurrents
Tableau_tri_decroissant_nb <- tableau_comptage_levels_carotte %>%
  arrange(desc(tableau_comptage_levels_carotte$`Nombre d'occurences`))

```

## b) Représentation graphique 

```{r}

########################## socleo ########################## 

########################## 2021

# Diagramme en barre du nombre de lignes par levels
ggplot(Tableau_tri_decroissant_nb)+aes(x=N,y=Level)+
  geom_bar(stat = "identity",fill = "#FF6666")
```

# VII) Export 

```{r}

# Exporter Tableau_tri_decroissant_nom
write.xlsx(Tableau_tri_decroissant_nom, 
           file = "Analyse exploratoire/Tableau_tri_decroissant_nom.xlsx")

# Exporter Tableau_tri_decroissant_nom
write.xlsx(Tableau_tri_decroissant_nb, 
           file = "Analyse exploratoire/Tableau_tri_decroissant_nb.xlsx")

```
