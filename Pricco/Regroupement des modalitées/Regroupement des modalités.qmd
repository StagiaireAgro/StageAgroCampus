---
title: "Regroupement de modalités"
format: html
editor: visual
---

# Importation des librairies

```{r,message=FALSE}
library(tidyverse)
library(stringr)
library(stringi)
```

# Importation du fichier

```{r}

########################## Socleo ########################## 

data_socleo_2021 <- read.csv("data/socleo/2021.csv")
data_socleo_2022 <- read.csv("data/socleo/2022.csv",sep = ";")
data_socleo_2023 <- read.csv("data/socleo/2023.csv",sep = ";")
data_socleo_2024 <- read.csv("data/socleo/2024.csv",sep = ";")

########################## coop circuit ########################## 

data_coop_circuit_2021 <- read.csv("data/coop circuit/par annee/2021.csv",sep = ",")
data_coop_circuit_2022 <- read.csv("data/coop circuit/par annee/2022.csv",sep = ";")
data_coop_circuit_2023 <- read.csv("data/coop circuit/par annee/2023.csv",sep = ";")
data_coop_circuit_2024 <- read.csv("data/coop circuit/par annee/2024.csv",sep = ";")

########################## la ruche qui dit oui ########################## 

data_ruche_oui_2021_part_1 <- read.csv("data/la ruche qui dit oui/historique_2021part1.csv",sep = ";")
data_ruche_oui_2021_part_2 <- read.csv("data/la ruche qui dit oui/historique_2021part1.csv",sep = ";")
data_ruche_oui_2022 <- read.csv("data/la ruche qui dit oui/historique_2022.csv",sep = ";")
data_ruche_oui_2023 <- read.csv("data/la ruche qui dit oui/historique_2023.csv",sep = ";")
data_ruche_oui_2024 <- read.csv("data/la ruche qui dit oui/historique_2024.csv",sep = ";")
```

# Séparation des fichiers

```{r}
# Liste des mots-clés de produits
liste_mots_cles <- c("Abricot", "Banane", "Cerise", "Clémentine", "Fraise", "Kiwi", "Nectarine", "Noix", "Pêche", "Poire", 
                     "Pomme de terre", "Jus de Pomme", "Pomme", "Prune", "Raisin", "Asperge", "Aubergine", "Carotte", 
                     "Céleri-branche", "Chou fleur", "Concombre", "Courgette", "Endive", "Haricot vert", "Laitue", "Melon", 
                     "Oignon", "Poireau", "Poivron", "Potiron", "Tomate", "Lait","Boeuf", "oeuf", "Porc", "Poulet", "Lentille")

# Liste des mots-clés de produits  (au pluriel)
liste_mots_cles_pluriel <- c("Abricots", "Bananes", "Cerises", "Clémentines", "Fraises", "Kiwis", "Nectarines", "Noix", "Pêches", "Poires", 
                     "Pommes de terre", "Jus de Pommes", "Pommes", "Prunes", "Raisins", "Asperges", "Aubergines", "Carottes", 
                     "Céleri-branches", "Choux fleurs", "Concombres", "Courgettes", "Endives", "Haricots verts", "Laitues", "Melons", 
                     "Oignons", "Poireaux", "Poivrons", "Potirons", "Tomates", "Laits","Boeufs", "oeuf","Porcs", "Poulets", "Lentilles")

# Correspondance entre mots au pluriel et leur forme au singulier
correspondance_pluriel <- c(
  "abricots" = "abricot", "bananes" = "banane", "cerises" = "cerise", "clémentines" = "clémentine",
  "fraises" = "fraise", "kiwis" = "kiwi", "nectarines" = "nectarine", "noix" = "noix", "pêches" = "pêche",
  "poires" = "poire", "pommes de terre" = "pomme de terre", "jus de pommes" = "jus de pomme",
  "pommes" = "pomme", "prunes" = "prune", "raisins" = "raisin", "asperges" = "asperge",
  "aubergines" = "aubergine", "carottes" = "carotte", "céleris-branches" = "céleri-branche",
  "choux fleurs" = "chou fleur", "concombres" = "concombre", "courgettes" = "courgette",
  "endives" = "endive", "haricots verts" = "haricot vert", "laitues" = "laitue", "melons" = "melon",
  "oignons" = "oignon", "poireaux" = "poireau", "poivrons" = "poivron", "potirons" = "potiron",
  "tomates" = "tomate", "laits" = "lait", "œufs" = "œuf", "bœufs" = "boeuf", "porcs" = "porc",
  "poulets" = "poulet", "lentilles" = "lentille"
)

# On crée une liste combinée : mots au singulier et formes plurielles
mots_clefs_etendus <- unique(c(liste_mots_cles, names(correspondance_pluriel)))

# On trie les mots par ordre décroissant de longueur, pour éviter qu’un mot court capte une expression plus longue (ex : "pomme" avant "pomme de terre")
mots_clefs_etendus <- mots_clefs_etendus[order(nchar(mots_clefs_etendus), decreasing = TRUE)]



# Fonction principale de regroupement des produits
regrouper_produits <- function(df) {
  
  # I) Nettoyage du nom des modalités 
  df <- df %>%
    mutate(
      # 1. Mise en minuscule pour éviter les erreurs de casse
      name_clean = str_to_lower(name),
      
      # 2. Suppression des accents (ex : "pêche" → "peche")
      name_clean = stri_trans_general(name_clean, "Latin-ASCII"),
      
      # 3. Suppression des caractères spéciaux (ex : apostrophes, tirets)
      name_clean = str_replace_all(name_clean, "[^a-z ]", "")
    )
  
  # Détection vectorielle des mots au pluriel (non utilisée ensuite dans le code, pourrait être supprimée)
  df <- df %>%
    mutate(
      pluriel_detecte = str_detect(name_clean, str_c("\\b(", str_c(liste_mots_cles_pluriel, collapse = "|"), ")\\b"))
    )
  
  # II) Supprimer les lignes contenant plus d’un mot-clé
  df <- df %>%
    rowwise() %>%
    mutate(
      # On compte combien de mots-clés apparaissent dans chaque ligne (singulier + pluriel)
      mots_trouves = sum(
        str_to_lower(c(liste_mots_cles, names(correspondance_pluriel))) %in%
          str_extract_all(name_clean, "\\b[a-z]+\\b")[[1]]
      )
    ) %>%
    ungroup() %>%
    # On garde uniquement les lignes qui contiennent 0 ou 1 mot-clé
    filter(mots_trouves <= 1)

  
  # III) Création d’une variable vide pour indiquer le produit détecté
  df$produit <- NA_character_
  
  # IV) Initialisation d’une liste vide pour stocker les dataframes filtrés
  resultats_liste <- list()
  
  # V) Boucle sur chaque mot-clé (singulier ou pluriel)
  for (mot_cle in mots_clefs_etendus) {
    
    # Création d’un masque logique pour détecter les lignes contenant ce mot (non encore assignées à un produit)
    mask <- str_detect(df$name_clean, regex(paste0("\\b", mot_cle, "\\b"), ignore_case = TRUE)) & is.na(df$produit)
    
    # Si des lignes correspondent
    if (any(mask)) {
      
      # On ramène la forme trouvée à son équivalent singulier
      mot_singulier <- ifelse(
        mot_cle %in% names(correspondance_pluriel),
        correspondance_pluriel[[mot_cle]],
        mot_cle
      )
      
      # Mise en minuscule du mot-clé pour cohérence
      mot_singulier <- str_to_lower(mot_singulier)
      
      # On affecte le nom du produit à ces lignes
      df$produit[mask] <- mot_singulier
      
      # On extrait les lignes correspondantes
      df_temp <- df[mask, ]
      
      # On construit le nom de l’objet dans la liste, en remplaçant les espaces par des underscores
      nom_objet <- paste0("df_", gsub(" ", "_", mot_singulier))
      
      # On ajoute ou on complète le sous-dataframe correspondant dans la liste de résultats
      resultats_liste[[nom_objet]] <- bind_rows(resultats_liste[[nom_objet]], df_temp)
    }
  }
  
  # VI) Récupération des lignes restantes (produits non reconnus)
  df_autres <- df[is.na(df$produit), ]
  resultats_liste[["df_autres"]] <- df_autres
  
  # VII) Retour de la liste complète des jeux de données
  return(resultats_liste)
}



```

# Test pour la séparation des fichiers

```{r}
#########################################################
#                                                       #
#   Tests de la fonction sur différents fichiers        #
#                                                       #
######################################################### 

########################## Socleo ########################## 

liste_resultats_socleo_2021 <- regrouper_produits(data_socleo_2021)
liste_resultats_socleo_2022 <- regrouper_produits(data_socleo_2022)
liste_resultats_socleo_2023 <- regrouper_produits(data_socleo_2023)
liste_resultats_socleo_2024 <- regrouper_produits(data_socleo_2024)

########################## coop circuit ########################## 

liste_resultats_coop_circuit_2021 <- regrouper_produits(data_coop_circuit_2021)
liste_resultats_coop_circuit_2022 <- regrouper_produits(data_coop_circuit_2022)
liste_resultats_coop_circuit_2023 <- regrouper_produits(data_coop_circuit_2023)
liste_resultats_coop_circuit_2024 <- regrouper_produits(data_coop_circuit_2024)

########################## la ruche qui dit oui ########################## 

 # On renomme la variable du nom de produit pour que la fonction marche
names(data_ruche_oui_2021_part_1)[8] <- c("name")

# On teste 
liste_resultats_ruche_oui_2021_part_1 <- regrouper_produits(data_ruche_oui_2021_part_1)

 # On renomme la variable du nom de produit pour que la fonction marche
names(data_ruche_oui_2021_part_2)[8] <- c("name")

# On teste 
liste_resultats_ruche_oui_2021_part_2 <- regrouper_produits(data_ruche_oui_2021_part_2)

 # On renomme la variable du nom de produit pour que la fonction marche
names(data_ruche_oui_2022)[8] <- c("name")

# On teste 
liste_resultats_ruche_oui_2022 <- regrouper_produits(data_ruche_oui_2022)

 # On renomme la variable du nom de produit pour que la fonction marche
names(data_ruche_oui_2023)[8] <- c("name")

# On teste 
liste_resultats_ruche_oui_2023 <- regrouper_produits(data_ruche_oui_2023)

 # On renomme la variable du nom de produit pour que la fonction marche
names(data_ruche_oui_2024)[8] <- c("name")

# On teste 
liste_resultats_ruche_oui_2024 <- regrouper_produits(data_ruche_oui_2024)

###################################################################
#                                                                 #
#   Exemple d'accès à un sous-dataframe de la liste de résultat   #
#                                                                 #
################################################################### 

view(liste_resultats_socleo_2021$df_pomme)

view(liste_resultats_socleo_2022$df_autres)

view(liste_resultats_socleo_2023$df_autres)

```



# Renommage des tables par rapport au nom des fournisseurs 

```{r}

###################################################################
#                                                                 #
#               Renommage des tables pour socleo                  #
#                                                                 #
################################################################### 

# Noms des jeux de données de la liste de résultat
noms_df <- names(liste_resultats_socleo_2021)

# Renommage des noms en remplaçant 'df' par 'bulle'
noms_socleo <- sub("^df", "socleo", noms_df)

# Appliquer les nouveaux noms à la liste
liste_resultats_socleo_2021 <- setNames(liste_resultats_socleo_2021, noms_socleo)

########################## Année 2022 ########################## 

# Noms des jeux de données de la liste de résultat
noms_df <- names(liste_resultats_socleo_2022)

# Renommage des noms en remplaçant 'df' par 'bulle'
noms_socleo <- sub("^df", "socleo", noms_df)

# Appliquer les nouveaux noms à la liste
liste_resultats_socleo_2022 <- setNames(liste_resultats_socleo_2022, noms_socleo)

########################## Année 2023 ########################## 

# Noms des jeux de données de la liste de résultat
noms_df <- names(liste_resultats_socleo_2023)

# Renommage des noms en remplaçant 'df' par 'bulle'
noms_socleo <- sub("^df", "socleo", noms_df)

# Appliquer les nouveaux noms à la liste
liste_resultats_socleo_2023 <- setNames(liste_resultats_socleo_2023, noms_socleo)

########################## Année 2024 ########################## 

# Noms des jeux de données de la liste de résultat
noms_df <- names(liste_resultats_socleo_2024)

# Renommage des noms en remplaçant 'df' par 'bulle'
noms_socleo <- sub("^df", "socleo", noms_df)

# Appliquer les nouveaux noms à la liste
liste_resultats_socleo_2024 <- setNames(liste_resultats_socleo_2024, noms_socleo)

###################################################################
#                                                                 #
#         Renommage des tables pour coop circuit                  #
#                                                                 #
################################################################### 

########################## Année 2021 ########################## 

# Noms des jeux de données de la liste de résultat
noms_df <- names(liste_resultats_coop_circuit_2021)

# Renommage des noms en remplaçant 'df' par 'bulle'
noms_coop_circuit <- sub("^df", "coop_circuit", noms_df)

# Appliquer les nouveaux noms à la liste
liste_resultats_coop_circuit_2021 <- setNames(liste_resultats_coop_circuit_2021, noms_coop_circuit)

########################## Année 2022 ########################## 

# Noms des jeux de données de la liste de résultat
noms_df <- names(liste_resultats_coop_circuit_2022)

# Renommage des noms en remplaçant 'df' par 'bulle'
noms_coop_circuit <- sub("^df", "coop_circuit", noms_df)

# Appliquer les nouveaux noms à la liste
liste_resultats_coop_circuit_2022 <- setNames(liste_resultats_coop_circuit_2022, noms_coop_circuit)

########################## Année 2023 ########################## 

# Noms des jeux de données de la liste de résultat
noms_df <- names(liste_resultats_coop_circuit_2023)

# Renommage des noms en remplaçant 'df' par 'bulle'
noms_coop_circuit <- sub("^df", "coop_circuit", noms_df)

# Appliquer les nouveaux noms à la liste
liste_resultats_coop_circuit_2023 <- setNames(liste_resultats_coop_circuit_2023, noms_coop_circuit)

########################## Année 2024 ########################## 

# Noms des jeux de données de la liste de résultat
noms_df <- names(liste_resultats_coop_circuit_2024)

# Renommage des noms en remplaçant 'df' par 'bulle'
noms_coop_circuit <- sub("^df", "coop_circuit", noms_df)

# Appliquer les nouveaux noms à la liste
liste_resultats_coop_circuit_2024 <- setNames(liste_resultats_coop_circuit_2024, noms_coop_circuit)


###################################################################
#                                                                 #
#     Renommage des tables pour la ruche qui dit oui              #
#                                                                 #
################################################################### 

########################## Année 2021 ########################## 

###################### Partie 1 : 

# Noms des jeux de données de la liste de résultat
noms_df <- names(liste_resultats_ruche_oui_2021_part_1)

# Renommage des noms en remplaçant 'df' par 'bulle'
noms_ruche_oui <- sub("^df", "ruche_qui_dit_oui", noms_df)

# Appliquer les nouveaux noms à la liste
liste_resultats_ruche_oui_2021_part_1 <- setNames(liste_resultats_ruche_oui_2021_part_1, noms_ruche_oui)

###################### Partie 2 : 

# Noms des jeux de données de la liste de résultat
noms_df <- names(liste_resultats_ruche_oui_2021_part_2)

# Renommage des noms en remplaçant 'df' par 'bulle'
noms_ruche_oui <- sub("^df", "ruche_qui_dit_oui", noms_df)

# Appliquer les nouveaux noms à la liste
liste_resultats_ruche_oui_2021_part_2 <- setNames(liste_resultats_ruche_oui_2021_part_2, noms_ruche_oui)


########################## Année 2022 ########################## 

# Noms des jeux de données de la liste de résultat
noms_df <- names(liste_resultats_ruche_oui_2022)

# Renommage des noms en remplaçant 'df' par 'bulle'
noms_ruche_oui <- sub("^df", "ruche_qui_dit_oui", noms_df)

# Appliquer les nouveaux noms à la liste
liste_resultats_ruche_oui_2022 <- setNames(liste_resultats_ruche_oui_2022, noms_ruche_oui)


########################## Année 2023 ########################## 

# Noms des jeux de données de la liste de résultat
noms_df <- names(liste_resultats_ruche_oui_2023)

# Renommage des noms en remplaçant 'df' par 'bulle'
noms_ruche_oui <- sub("^df", "ruche_qui_dit_oui", noms_df)

# Appliquer les nouveaux noms à la liste
liste_resultats_ruche_oui_2023 <- setNames(liste_resultats_ruche_oui_2023, noms_ruche_oui)

########################## Année 2024 ########################## 

# Noms des jeux de données de la liste de résultat
noms_df <- names(liste_resultats_ruche_oui_2024)

# Renommage des noms en remplaçant 'df' par 'bulle'
noms_ruche_oui <- sub("^df", "ruche_qui_dit_oui", noms_df)

# Appliquer les nouveaux noms à la liste
liste_resultats_ruche_oui_2024 <- setNames(liste_resultats_ruche_oui_2024, noms_ruche_oui)


```

# Fusion des fichiers par produit avec toutes les années confondues 

```{r}

###################################################################
#                                                                 #
#                   Fusion des tables                             #
#                                                                 #
################################################################### 

########################## Socleo ########################## 

liste_resultats_socleo_tts_annees <- Map(bind_rows, 
                                        liste_resultats_socleo_2021, 
                                        liste_resultats_socleo_2022,
                                        liste_resultats_socleo_2023,
                                        liste_resultats_socleo_2024)

########################## coop circuit ########################## 

liste_resultats_coop_circuit_tts_annees <- Map(bind_rows, 
                                        liste_resultats_coop_circuit_2021, 
                                        liste_resultats_coop_circuit_2022,
                                        liste_resultats_coop_circuit_2023,
                                        liste_resultats_coop_circuit_2024)

########################## la ruche qui dit oui ########################## 

# liste_resultats_ruche_oui_tts_annees <- Map(bind_rows, 
#                                         liste_resultats_ruche_oui_2021_part_1, 
#                                         liste_resultats_ruche_oui_2021_part_2,
#                                         liste_resultats_ruche_oui_2022,
#                                         liste_resultats_ruche_oui_2023,
#                                         liste_resultats_ruche_oui_2024)

```

# Vérification des produits 

```{r}
recherche_termes <- function(dataset, liste_mots){
  liste_mots <- stri_trans_general(str_to_lower(liste_mots), "Latin-ASCII")
  res <- list()
  for(i in 1:length(dataset)){
    data <- dataset[[i]]
    levels_names <- levels(as.factor(data[["name_clean"]]))
    for(lv_name in levels_names){
      for(word in liste_mots[liste_mots!=data[["produit"]][1]]){
        if(grepl(word, lv_name)){
          nom_table <- paste0("Nom de la table", data[["produit"]][1], sep=" ")
          mot_trouve <- paste0("Mot trouve ", word, sep=" ")
          phrase_ecrite <- paste0("Saisie user ", lv_name, sep=" ")
          res[[data[["produit"]][1]]] <- paste0("Saisie user : ", lv_name, " Mot trouve : ", word, sep=" ")
        }
      }
    }
  }
  return(res)
}

#############################################
#                                           #
#               Tests                       #
#                                           #  
#############################################

########################## Socleo ########################## 

############################## 2021-2024

# On retire le df_autres 
liste_socleo_sans_autres <- liste_resultats_socleo_tts_annees[names(liste_resultats_socleo_tts_annees) != "socleo_autres"]

# Liste des mots 
liste_mots_cles <- c("Abricot", "Banane", "Cerise", "Clémentine", "Fraise", "Kiwi", "Nectarine", "Noix", "Pêche", "Poire", 
                     "Pomme de terre", "Jus de Pomme", "Pomme", "Prune", "Raisin", "Asperge", "Aubergine", "Carotte", 
                     "Céleri-branche", "Chou fleur", "Concombre", "Courgette", "Endive", "Haricot vert", "Laitue", "Melon", 
                     "Oignon", "Poireau", "Poivron", "Potiron", "Tomate", "Lait", "Boeuf", "oeuf", "Porc", "Poulet", "Lentille")


# On Teste la fonction
verif_socleo <- recherche_termes(liste_socleo_sans_autres,liste_mots_cles)

########################## coop circuit ########################## 

############################## 2021-2024

# On retire le df_autres 
liste_coop_circuit_sans_autres<- 
  liste_resultats_coop_circuit_tts_annees[names(liste_resultats_coop_circuit_tts_annees) != "coop_circuit_autres"]

# Liste des mots 
liste_mots_cles <- c("Abricot", "Banane", "Cerise", "Clémentine", "Fraise", "Kiwi", "Nectarine", "Noix", "Pêche", "Poire", 
                     "Pomme de terre", "Jus de Pomme", "Pomme", "Prune", "Raisin", "Asperge", "Aubergine", "Carotte", 
                     "Céleri-branche", "Chou fleur", "Concombre", "Courgette", "Endive", "Haricot vert", "Laitue", "Melon", 
                     "Oignon", "Poireau", "Poivron", "Potiron", "Tomate", "Lait", "Boeuf", "oeuf", "Porc", "Poulet", "Lentille")


# On Teste la fonction
verif_coop_circuit <- recherche_termes(liste_coop_circuit_sans_autres,liste_mots_cles)

########################## la ruche qui dit oui ########################## 

############################## 2021

################ Partie 1 : 

# On retire le df_autres 
liste_ruche_qui_dit_oui_sans_autres_2021_part_1 <- 
  liste_resultats_ruche_oui_2021_part_1[names(liste_resultats_ruche_oui_2021_part_1) != 
                                   "ruche_qui_dit_oui_autres"]

# Liste des mots 
liste_mots_cles <- c("Abricot", "Banane", "Cerise", "Clémentine", "Fraise", "Kiwi", "Nectarine", "Noix", "Pêche", "Poire", 
                     "Pomme de terre", "Jus de Pomme", "Pomme", "Prune", "Raisin", "Asperge", "Aubergine", "Carotte", 
                     "Céleri-branche", "Chou fleur", "Concombre", "Courgette", "Endive", "Haricot vert", "Laitue", "Melon", 
                     "Oignon", "Poireau", "Poivron", "Potiron", "Tomate", "Lait", "Boeuf", "oeuf", "Porc", "Poulet", "Lentille")


# On Teste la fonction
verif_ruche_qui_dit_oui_2021_part_1 <- recherche_termes(liste_ruche_qui_dit_oui_sans_autres_2021_part_1,liste_mots_cles)

################ Partie 2 : 

# On retire le df_autres 
liste_ruche_qui_dit_oui_sans_autres_2021_part_2 <- 
  liste_resultats_ruche_oui_2021_part_2[names(liste_resultats_ruche_oui_2021_part_2) != 
                                          "ruche_qui_dit_oui_autres"]

# Liste des mots 
liste_mots_cles <- c("Abricot", "Banane", "Cerise", "Clémentine", "Fraise", "Kiwi", "Nectarine", "Noix", "Pêche", "Poire", 
                     "Pomme de terre", "Jus de Pomme", "Pomme", "Prune", "Raisin", "Asperge", "Aubergine", "Carotte", 
                     "Céleri-branche", "Chou fleur", "Concombre", "Courgette", "Endive", "Haricot vert", "Laitue", "Melon", 
                     "Oignon", "Poireau", "Poivron", "Potiron", "Tomate", "Lait", "Boeuf", "oeuf", "Porc", "Poulet", "Lentille")


# On Teste la fonction
verif_ruche_qui_dit_oui_2021_part_2 <- recherche_termes(liste_ruche_qui_dit_oui_sans_autres_2021_part_2,liste_mots_cles)


############################## 2022

# On retire le df_autres 
liste_ruche_qui_dit_oui_sans_autres_2022 <- 
  liste_resultats_ruche_oui_2022[names(liste_resultats_ruche_oui_2022) != 
                                                                     "ruche_qui_dit_oui_autres"]

# Liste des mots 
liste_mots_cles <- c("Abricot", "Banane", "Cerise", "Clémentine", "Fraise", "Kiwi", "Nectarine", "Noix", "Pêche", "Poire", 
                     "Pomme de terre", "Jus de Pomme", "Pomme", "Prune", "Raisin", "Asperge", "Aubergine", "Carotte", 
                     "Céleri-branche", "Chou fleur", "Concombre", "Courgette", "Endive", "Haricot vert", "Laitue", "Melon", 
                     "Oignon", "Poireau", "Poivron", "Potiron", "Tomate", "Lait", "Boeuf", "oeuf", "Porc", "Poulet", "Lentille")


# On Teste la fonction
verif_ruche_qui_dit_oui_2022 <- recherche_termes(liste_ruche_qui_dit_oui_sans_autres_2022,liste_mots_cles)

############################## 2023

# On retire le df_autres 
liste_ruche_qui_dit_oui_sans_autres_2023 <- 
  liste_resultats_ruche_oui_2023[names(liste_resultats_ruche_oui_2023) != 
                                   "ruche_qui_dit_oui_autres"]

# Liste des mots 
liste_mots_cles <- c("Abricot", "Banane", "Cerise", "Clémentine", "Fraise", "Kiwi", "Nectarine", "Noix", "Pêche", "Poire", 
                     "Pomme de terre", "Jus de Pomme", "Pomme", "Prune", "Raisin", "Asperge", "Aubergine", "Carotte", 
                     "Céleri-branche", "Chou fleur", "Concombre", "Courgette", "Endive", "Haricot vert", "Laitue", "Melon", 
                     "Oignon", "Poireau", "Poivron", "Potiron", "Tomate", "Lait", "Boeuf", "oeuf", "Porc", "Poulet", "Lentille")


# On Teste la fonction
verif_ruche_qui_dit_oui_2023 <- recherche_termes(liste_ruche_qui_dit_oui_sans_autres_2023,liste_mots_cles)

############################## 2024

# On retire le df_autres 
liste_ruche_qui_dit_oui_sans_autres_2024 <- 
  liste_resultats_ruche_oui_2024[names(liste_resultats_ruche_oui_2024) != 
                                   "ruche_qui_dit_oui_autres"]

# Liste des mots 
liste_mots_cles <- c("Abricot", "Banane", "Cerise", "Clémentine", "Fraise", "Kiwi", "Nectarine", "Noix", "Pêche", "Poire", 
                     "Pomme de terre", "Jus de Pomme", "Pomme", "Prune", "Raisin", "Asperge", "Aubergine", "Carotte", 
                     "Céleri-branche", "Chou fleur", "Concombre", "Courgette", "Endive", "Haricot vert", "Laitue", "Melon", 
                     "Oignon", "Poireau", "Poivron", "Potiron", "Tomate", "Lait", "Boeuf", "oeuf", "Porc", "Poulet", "Lentille")


# On Teste la fonction
verif_ruche_qui_dit_oui_2024 <- recherche_termes(liste_ruche_qui_dit_oui_sans_autres_2024,liste_mots_cles)

```


# Export des fichiers séparés au format csv

```{r}
export_fichiers_separes <- function(liste_df, dossier_export = "export_csv_legumes") {
  # Crée le dossier s'il n'existe pas déjà
  if (!dir.exists(dossier_export)) {
    dir.create(dossier_export, recursive = TRUE)
  }

  # Boucle sur chaque élément de la liste
  for (nom_df in names(liste_df)) {
    # Construit le chemin de fichier (remplace les espaces par des underscores)
    chemin_fichier <- file.path(dossier_export, paste0(gsub(" ", "_", nom_df), ".csv"))
    
    # Écrit le dataframe au format CSV avec encodage UTF-8
    write.csv(liste_df[[nom_df]], file = chemin_fichier, row.names = FALSE, fileEncoding = "UTF-8")
  }

}

########################## Socleo ########################## 

export_fichiers_separes(liste_resultats_socleo_tts_annees, dossier_export = "export_csv_socleo")

########################## coop circuit ########################## 

export_fichiers_separes(liste_resultats_coop_circuit_tts_annees, dossier_export = "export_csv_coop_circuit")

########################## la ruche qui dit oui ########################## 

```
