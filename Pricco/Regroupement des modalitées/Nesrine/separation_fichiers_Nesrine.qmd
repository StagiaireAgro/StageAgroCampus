---
title: "separation_fichiers_v4"
format: html
editor: visual
---

# I) Chargement des bibliothèques nécessaires

```{r,message=FALSE}

# Pour lire les fichiers CSV
library(readr)

# Pour manipuler et détecter les chaînes de caractères
library(stringr)

# Pour gérer les accents et normaliser les chaînes
library(stringi)

# Pour créer de sgraphiques plus sophistiqués
library(ggplot2)

```

# II) Importation des fichiers

```{r,warning=FALSE}
########################## Socleo ########################## 

data_socleo_2021 <- read.csv("data/socleo/toutsocleo_2021.csv",sep = ",")

########################## coop circuit ########################## 

data_coop_circuit_2021 <- read.csv("data/coop circuit/par annee/2021.csv",sep = ",")
data_coop_circuit_2022 <- read.csv("data/coop circuit/par annee/2022.csv",sep = ";")
data_coop_circuit_2023 <- read.csv("data/coop circuit/par annee/2023.csv",sep = ";")
data_coop_circuit_2024 <- read.csv("data/coop circuit/par annee/2024.csv",sep = ";")

########################## la ruche qui dit oui ########################## 

data_ruche_oui_2021_part_1 <- 
  read.csv("data/la ruche qui dit oui/historique_2021part1.csv",sep = ";")
data_ruche_oui_2021_part_2 <- 
  read.csv("data/la ruche qui dit oui/historique_2021part1.csv",sep = ";")
data_ruche_oui_2022 <- read.csv("data/la ruche qui dit oui/historique_2022.csv",sep = ";")
data_ruche_oui_2023 <- read.csv("data/la ruche qui dit oui/historique_2023.csv",sep = ";")
data_ruche_oui_2024 <- read.csv("data/la ruche qui dit oui/historique_2024.csv",sep = ";")
```

# III) Définition de la liste de produits

```{r}
# Liste des produits alimentaires à rechercher
liste_produits <- c(
  "Abricot", "Banane", "Cerise", "Clémentine", "Fraise", "Kiwi", "Nectarine",
  "Noix", "Pêche", "Poire", "Pomme de terre", "Jus de Pomme", "Pomme", "Prune",
  "Raisin", "Asperge", "Aubergine", "Carotte", "Céleri-branche", "Chou fleur",
  "Concombre", "Courgette", "Endive", "Haricot vert", "Laitue", "Melon",
  "Oignon", "Poireau","Poivron", "Potiron", "Tomate", "Lait", "Oeuf", "Boeuf",
  "Porc", "Poulet", "Lentille"
)

# Mise en minuscules pour correspondance plus facile
liste_produits <- str_to_lower(liste_produits)

# On supprime les tirets pour correspondance plus facile
liste_produits <- gsub("-", " ", liste_produits, ignore.case = TRUE)

# On supprime les accents pour correspondance plus facile
liste_produits <- stri_trans_general(liste_produits, "Latin-ASCII")

```

# IV) Dermination de la liste des déclinaisons possibles des noms de produits

## 2) Coop Circuit

### a) Stockage des levels existant 

```{r}
########################## coop circuit ########################## 

########################## 2021 

# Étape 1 : Convertir en facteur
data_coop_circuit_2021$name <- as.factor(data_coop_circuit_2021$name)

# Étape 2 : Extraire les levels
declinaison_coop_circuit_2021_noms_produits <- levels(data_coop_circuit_2021$name)

# Étape 3 : Mise en minuscules
declinaison_coop_circuit_2021_noms_produits <- str_to_lower(declinaison_coop_circuit_2021_noms_produits)

# Étape 4 : Suppression des accents
declinaison_coop_circuit_2021_noms_produits <- stri_trans_general(declinaison_coop_circuit_2021_noms_produits, "Latin-ASCII")

# Étape 5 : Remplacement des tirets par un espace
declinaison_coop_circuit_2021_noms_produits <- gsub("-", " ", declinaison_coop_circuit_2021_noms_produits)
```


### b) On regarde à l'oeil nu les variantes de noms de produits

```{r}

########################## coop circuit ########################## 

########################## 2021 

# abricot

abricot <- declinaison_coop_circuit_2021_noms_produits[grepl("abricot",
                                                                   declinaison_coop_circuit_2021_noms_produits)]

abricot

# banane
banane <- declinaison_coop_circuit_2021_noms_produits[grepl("banane",
                                                                   declinaison_coop_circuit_2021_noms_produits)]

banane

# cerise
cerise <- declinaison_coop_circuit_2021_noms_produits[grepl("cerise",
                                                                   declinaison_coop_circuit_2021_noms_produits)]

cerise

# clementine
clementine <- declinaison_coop_circuit_2021_noms_produits[grepl("clementine",
                                                                   declinaison_coop_circuit_2021_noms_produits)]

clementine

# fraise
fraise <- declinaison_coop_circuit_2021_noms_produits[grepl("fraise",
                                                                   declinaison_coop_circuit_2021_noms_produits)]

fraise

# kiwi
kiwi <- declinaison_coop_circuit_2021_noms_produits[grepl("kiwi",
                                                                   declinaison_coop_circuit_2021_noms_produits)]

kiwi

# nectarine
nectarine <- declinaison_coop_circuit_2021_noms_produits[grepl("nectarine",
                                                                   declinaison_coop_circuit_2021_noms_produits)]

nectarine

# noix
noix <- declinaison_coop_circuit_2021_noms_produits[grepl("noix",
                                                                   declinaison_coop_circuit_2021_noms_produits)]

noix

# peche
peche <- declinaison_coop_circuit_2021_noms_produits[grepl("peche",
                                                                   declinaison_coop_circuit_2021_noms_produits)]

peche

# poire
motif_poire <- paste0("\\b", "poires", "\\b")

poire <- declinaison_coop_circuit_2021_noms_produits[grepl(motif_poire,
                                                                   declinaison_coop_circuit_2021_noms_produits)]

poire

# pomme de terre

### Ecriture 1 de pomme de terre
motif_pdt <- paste0("\\b", "pomme de terre", "\\b")

pomme_de_terre <- declinaison_coop_circuit_2021_noms_produits[grepl(motif_pdt,
                                                                   declinaison_coop_circuit_2021_noms_produits)]

pomme_de_terre

### Ecriture 2 de pommes de terre
motif_pdt <- paste0("\\b", "pommes de terre", "\\b")

pommes_de_terre <- declinaison_coop_circuit_2021_noms_produits[grepl(motif_pdt,
                                                                   declinaison_coop_circuit_2021_noms_produits)]

pommes_de_terre

### Ecriture 3 de pommes de terres
motif_pdt <- paste0("\\b", "pommes de terres", "\\b")

pommes_de_terres <- declinaison_coop_circuit_2021_noms_produits[grepl(motif_pdt,
                                                                   declinaison_coop_circuit_2021_noms_produits)]

pommes_de_terres

# jus de pomme

### Ecriture 1 de jus de pomme
motif_jus_pomme <- paste0("\\b", "jus des pomme", "\\b")

jus_pomme <- declinaison_coop_circuit_2021_noms_produits[grepl(motif_jus_pomme,
                                                                   declinaison_coop_circuit_2021_noms_produits)]

jus_pomme

# jus de pomme

### Ecriture 2 de jus de pommes
motif_jus_pomme <- paste0("\\b", "jus des pommes", "\\b")

jus_pommes <- declinaison_coop_circuit_2021_noms_produits[grepl(motif_jus_pomme,
                                                                   declinaison_coop_circuit_2021_noms_produits)]

jus_pommes

# pomme
motif_pomme <- paste0("\\b", "pomme", "\\b")

pomme <- declinaison_coop_circuit_2021_noms_produits[grepl(motif_pomme,
                                                                   declinaison_coop_circuit_2021_noms_produits)]

pomme

# prune
motif_prune <- paste0("\\b", "prunes", "\\b")

prune <- declinaison_coop_circuit_2021_noms_produits[grepl(motif_prune,
                                                                   declinaison_coop_circuit_2021_noms_produits)]

prune

# raisin
motif_raisin <- paste0("\\b", "raisin", "\\b")

raisin <- declinaison_coop_circuit_2021_noms_produits[grepl(motif_raisin,
                                                                   declinaison_coop_circuit_2021_noms_produits)]

raisin

# asperge
motif_asperge <- paste0("\\b", "asperge", "\\b")

asperge <- declinaison_coop_circuit_2021_noms_produits[grepl(motif_asperge,
                                                                   declinaison_coop_circuit_2021_noms_produits)]

asperge


# aubergine
motif_aubergine <- paste0("\\b", "aubergines", "\\b")

aubergine <- declinaison_coop_circuit_2021_noms_produits[grepl(motif_aubergine,
                                                        declinaison_coop_circuit_2021_noms_produits)]

aubergine

# carotte
motif_carotte <- paste0("\\b", "carottes", "\\b")

carotte <- declinaison_coop_circuit_2021_noms_produits[grepl(motif_carotte,
                                                        declinaison_coop_circuit_2021_noms_produits)]

carotte

# celeri branche
motif_celeri <- paste0("\\b", "celeri branche", "\\b")

celeri <- declinaison_coop_circuit_2021_noms_produits[grepl(motif_celeri,
                                                        declinaison_coop_circuit_2021_noms_produits)]

celeri

# chou fleur
motif_chou_fleur <- paste0("\\b", "chou fleurs", "\\b")

chou_fleur <- declinaison_coop_circuit_2021_noms_produits[grepl(motif_chou_fleur,
                                                        declinaison_coop_circuit_2021_noms_produits)]

chou_fleur

# concombre
motif_concombre <- paste0("\\b", "concombres", "\\b")

concombre <- declinaison_coop_circuit_2021_noms_produits[grepl(motif_concombre,
                                                        declinaison_coop_circuit_2021_noms_produits)]

concombre

# courgette
motif_courgette <- paste0("\\b", "courgettes", "\\b")

courgette <- declinaison_coop_circuit_2021_noms_produits[grepl(motif_courgette,
                                                        declinaison_coop_circuit_2021_noms_produits)]

courgette

# endive
motif_endive <- paste0("\\b", "endive", "\\b")

endive <- declinaison_coop_circuit_2021_noms_produits[grepl(motif_endive,
                                                        declinaison_coop_circuit_2021_noms_produits)]

endive

# haricot vert
motif_haricot_vert <- paste0("\\b", "haricots vert", "\\b")

haricot_vert <- declinaison_coop_circuit_2021_noms_produits[grepl(motif_haricot_vert,
                                                        declinaison_coop_circuit_2021_noms_produits)]

haricot_vert

# laitue
motif_laitue <- paste0("\\b", "laitues", "\\b")

laitue <- declinaison_coop_circuit_2021_noms_produits[grepl(motif_laitue,
                                                        declinaison_coop_circuit_2021_noms_produits)]

laitue

# melon
motif_melon <- paste0("\\b", "melons", "\\b")

melon <- declinaison_coop_circuit_2021_noms_produits[grepl(motif_melon,
                                                        declinaison_coop_circuit_2021_noms_produits)]

melon

# oignon
motif_oignon <- paste0("\\b", "oignons", "\\b")

oignon <- declinaison_coop_circuit_2021_noms_produits[grepl(motif_oignon,
                                                        declinaison_coop_circuit_2021_noms_produits)]

oignon

# poireau
motif_poireau <- paste0("\\b", "poireaux", "\\b")

poireau <- declinaison_coop_circuit_2021_noms_produits[grepl(motif_poireau,
                                                        declinaison_coop_circuit_2021_noms_produits)]

poireau

# poivron
motif_poivron <- paste0("\\b", "poivron", "\\b")

poivron <- declinaison_coop_circuit_2021_noms_produits[grepl(motif_poivron,
                                                        declinaison_coop_circuit_2021_noms_produits)]
poivron

# potiron
motif_potiron <- paste0("\\b", "potirons", "\\b")

potiron <- declinaison_coop_circuit_2021_noms_produits[grepl(motif_potiron,
                                                        declinaison_coop_circuit_2021_noms_produits)]

potiron

# tomate
motif_tomate <- paste0("\\b", "tomate", "\\b")

tomate <- declinaison_coop_circuit_2021_noms_produits[grepl(motif_tomate,
                                                        declinaison_coop_circuit_2021_noms_produits)]

tomate

# lait
motif_lait <- paste0("\\b", "laits", "\\b")

lait <- declinaison_coop_circuit_2021_noms_produits[grepl(motif_lait,
                                                        declinaison_coop_circuit_2021_noms_produits)]

lait

# oeuf
motif_oeuf <- paste0("\\b", "oeufs", "\\b")

oeuf <- declinaison_coop_circuit_2021_noms_produits[grepl(motif_oeuf,
                                                        declinaison_coop_circuit_2021_noms_produits)]

oeuf

# boeuf
motif_boeuf <- paste0("\\b", "boeuf", "\\b")

boeuf <- declinaison_coop_circuit_2021_noms_produits[grepl(motif_boeuf,
                                                        declinaison_coop_circuit_2021_noms_produits)]

boeuf

# porc
motif_porc <- paste0("\\b", "porcs", "\\b")

porc <- declinaison_coop_circuit_2021_noms_produits[grepl(motif_porc,
                                                        declinaison_coop_circuit_2021_noms_produits)]

porc

# poulet
motif_poulet <- paste0("\\b", "poulet", "\\b")

poulet <- declinaison_coop_circuit_2021_noms_produits[grepl(motif_poulet,
                                                        declinaison_coop_circuit_2021_noms_produits)]

poulet

# lentille
motif_lentille <- paste0("\\b", "lentilles", "\\b")

lentille <- declinaison_coop_circuit_2021_noms_produits[grepl(motif_lentille,
                                                        declinaison_coop_circuit_2021_noms_produits)]

lentille

```

# V) Création du vecteur des déclinaisons de nom de produit possibles

## 1) Coop Circuit

### a) Création pour chaque produit, son vecteur des variantes associé

```{r}

########################## coop circuit ########################## 

########################## 2021 

# abricot 
abricot_declinaison <- c("abricot", "abricots")

# banane 
banane_declinaison <- c("banane", "bananes")

# cerise 
cerise_declinaison <- c("cerise", "cerises")

# cerise 
clementine_declinaison <- c("clementine", "clementines")

# fraise 
fraise_declinaison <- c("fraise", "fraises")

# kiwis 
kiwi_declinaison <- c("kiwi", "kiwis")

# nectarine 
nectarine_declinaison <- c("nectarine","nectarines")

# noix 
noix_declinaison <- c("noix","coquinoix")

# peche 
peche_declinaison <- c("peche","peches")

# poire 
poire_declinaison <- c("poire","poires")

# pomme de terre 
pdt_declinaison <- c("pomme de terre","pommes de terre","pommes de terres",
                     "pomme de terres")

# jus de pomme 
jus_pomme_declinaison <- c("jus de pomme","jus de pommes")

# pomme 
pomme_declinaison <- c("pomme","pommes")

# prune 
prune_declinaison <- c("prune","prunes")

# raisin 
raisin_declinaison <- c("raisin","raisins")

# asperge 
asperge_declinaison <- c("asperge","asperges")

# aubergine 
aubergine_declinaison <- c("aubergine","aubergines")

# carotte 
carotte_declinaison <- c("carotte","carottes")

# celeri branche 
celeri_branche_declinaison <- c("celeri branche","celeris branches","celeris branche",
                                "celeri branches")

# chou fleur 
chou_fleur_declinaison <- c("chou fleur","choux fleurs","chou fleurs",
                            "choux fleur")

# concombre 
concombre_declinaison <- c("concombre","concombres")

# courgette 
courgette_declinaison <- c("courgette","courgettes")

# endive 
endive_declinaison <- c("endive","endives")

# haricot vert 
haricot_vert_declinaison <- c("haricot vert","haricots verts", "haricot verts",
                              "haricots vert")

# laitue 
laitue_declinaison <- c("laitue","laitues")

# melon 
melon_declinaison <- c("melon","melons")

# oignon 
oignon_declinaison <- c("oignon","oignons")

# poireau 
poireau_declinaison <- c("poireau","poireaux")

# poivron 
poivron_declinaison <- c("poivron","poivrons")

# potiron 
potiron_declinaison <- c("potiron","potirons")

# tomate 
tomate_declinaison <- c("tomate","tomates")

# lait 
lait_declinaison <- c("lait","laits")

# oeuf 
oeuf_declinaison <- c("oeuf","oeufs")

# boeuf 
boeuf_declinaison <- c("boeuf","boeufs")

# porc 
porc_declinaison <- c("porc","porcs")

# poulet 
poulet_declinaison <- c("poulet","poulets")

# lentille 
lentille_declinaison <- c("lentille","lentilles")

```


### b) Liste contenant toutes les déclinaisons possibles pour chaque nom de produit

```{r}
# Liste contenant toutes les déclinaisons possibles pour chaque nom de produit

liste_declinai_noms_produits <- list(
  abricot_declinaison,
  banane_declinaison,
  cerise_declinaison,
  clementine_declinaison,
  fraise_declinaison,
  kiwi_declinaison,
  nectarine_declinaison,
  noix_declinaison,
  peche_declinaison,
  poire_declinaison,
  pdt_declinaison,
  jus_pomme_declinaison,
  pomme_declinaison,
  prune_declinaison,
  raisin_declinaison,
  asperge_declinaison,
  aubergine_declinaison,
  carotte_declinaison,
  celeri_branche_declinaison,
  chou_fleur_declinaison,
  concombre_declinaison,
  courgette_declinaison,
  endive_declinaison,
  haricot_vert_declinaison,
  laitue_declinaison,
  melon_declinaison,
  oignon_declinaison,
  poireau_declinaison,
  poivron_declinaison,
  potiron_declinaison,
  tomate_declinaison,
  lait_declinaison,
  oeuf_declinaison,
  boeuf_declinaison,
  porc_declinaison,
  poulet_declinaison,
  lentille_declinaison
)
```

# VI) Création de la fonction split par nom de produit

## 1) Développement de la fonction split

```{r}

#  Fonction split par nom de produit
separation_fichiers <- function(data, liste_produits, liste_declinai_noms_produits) {

  #### Étape 0 : Ajout et nettoyage de la colonne `name_clean` dans `data`
  data <- data %>%
    mutate(
      name_clean = name %>%
        str_to_lower() %>%
        stri_trans_general("Latin-ASCII") %>%
        gsub("-", " ", ., ignore.case = TRUE)
    )

  #### Étape 1 : On extrait les levels des produits
  levels_produits <- levels(as.factor(data$name_clean))

  #### Étape 2 : Création de la matrice de présence
  matrice_presence <- sapply(liste_declinai_noms_produits, function(declinaisons) {
    sapply(levels_produits, function(level) {
      any(str_detect(level, fixed(declinaisons))) * 1
    })
  })

  # Transposition pour avoir les produits en colonnes
  matrice_presence <- t(matrice_presence)

  # Calcul du nombre de correspondances pour chaque level
  nb_variantes_noms <- colSums(matrice_presence)

  # Ajouter cette ligne en bas de la matrice
  matrice_presence <- rbind(matrice_presence, nb_variantes_noms)

  #### Étape 3 : Identifier les noms qui correspondent à un seul produit
  levels_uniques <- names(nb_variantes_noms[nb_variantes_noms == 1])

  # On garde uniquement les colonnes de la matrice où une seule correspondance existe
  matrice_uniques <- matrice_presence[-nrow(matrice_presence), levels_uniques, drop = FALSE]

  #### Étape 4 : Créer un vecteur nom_produit proprement
  vecteur_nom_produit <- sapply(levels_uniques, function(level) {
    idx <- which(matrice_uniques[, level] == 1)
    if (length(idx) == 1) {
      return(liste_produits[idx])
    } else {
      return(NA)
    }
  }, USE.NAMES = TRUE)

  vecteur_nom_produit <- vecteur_nom_produit[!is.na(vecteur_nom_produit)]

  # Créer le dataframe de correspondance
  df_correspondance <- data.frame(
    name_clean = names(vecteur_nom_produit),
    nom_produit = unname(vecteur_nom_produit),
    stringsAsFactors = FALSE
  )

  #### Étape 5 : Générer data_ok en ajoutant nom_produit
  data_ok <- data %>%
    filter(name_clean %in% df_correspondance$name_clean) %>%
    left_join(df_correspondance, by = "name_clean")

  #### Étape 6 : Extraire les noms avec 0 ou plusieurs correspondances
  levels_pas_ok <- names(nb_variantes_noms[nb_variantes_noms != 1])

  matrice_pas_ok <- matrice_presence[-nrow(matrice_presence), levels_pas_ok, drop = FALSE]

  vecteur_nom_pas_ok <- sapply(levels_pas_ok, function(level) {
    idx <- which(matrice_pas_ok[, level] == 1)
    if (length(idx) == 0) {
      return(NA)
    } else {
      return(paste(liste_produits[idx], collapse = ";"))
    }
  }, USE.NAMES = TRUE)

  df_correspondance_pas_ok <- data.frame(
    name_clean = names(vecteur_nom_pas_ok),
    nom_produit = unname(vecteur_nom_pas_ok),
    stringsAsFactors = FALSE
  )

  #### Étape 7 : Générer data_pas_ok
  data_pas_ok <- data %>%
    filter(name_clean %in% df_correspondance_pas_ok$name_clean) %>%
    left_join(df_correspondance_pas_ok, by = "name_clean")

  #### Étape 8 : Identifier les lignes avec plusieurs noms dans data_pas_ok
  data_ambigus <- data_pas_ok %>%
    filter(str_detect(nom_produit, ";"))

  #### Étape 9 : Nettoyage des noms emboîtés
  data_ambigus_clean <- data_ambigus %>%
    rowwise() %>%
    mutate(
      noms_list = list(str_split(nom_produit, ";")[[1]] %>% str_trim())
    ) %>%
    mutate(
      noms_clean = list({
        noms <- noms_list
        noms[!sapply(noms, function(x) any(noms != x & str_detect(noms, fixed(x))))]
      })
    ) %>%
    mutate(
      nom_produit_new = ifelse(length(noms_clean) == 1, noms_clean[[1]], paste(noms_clean, collapse = ";"))
    ) %>%
    ungroup()

  #### Étape 10 : Extraire les lignes devenues "uniques" après nettoyage
  data_deplaces <- data_ambigus_clean %>%
    filter(!str_detect(nom_produit_new, ";")) %>%
    select(-nom_produit, -noms_list, -noms_clean) %>%
    rename(nom_produit = nom_produit_new)

  #### Étape 11 : Mettre à jour data_ok
  data_ok <- bind_rows(data_ok, data_deplaces)

  #### Étape 12 : Mettre à jour data_pas_ok sans les lignes déplacées
  data_pas_ok <- data_pas_ok %>%
    filter(!(name_clean %in% data_deplaces$name_clean))

  return(list(data_ok = data_ok, data_pas_ok = data_pas_ok))
}


```

## 2) Application de la fonction split sur les fichiers

```{r}

# Test de la fonction : Fichier coop circuit 2021
resultats <- separation_fichiers(
  data = data_coop_circuit_2021,
  liste_produits = liste_produits,
  liste_declinai_noms_produits = liste_declinai_noms_produits
)

# On regarde séparemment le data_ok et data_pas_ok
data_ok <- resultats$data_ok
data_pas_ok <- resultats$data_pas_ok

```


# VII) Création de la fonction split de data_ok par nom de produit

## 1) Développement de la fonction split de data_ok par nom de produit

```{r}
split_data_ok_par_produit <- function(data_ok) {
  # Vérification de la présence de la colonne nom_produit
  if (!"nom_produit" %in% colnames(data_ok)) {
    stop("La colonne 'nom_produit' est absente de data_ok")
  }

  # Découpage automatique en liste de data frames, un par produit
  liste_data_par_produit <- split(data_ok, data_ok$nom_produit)

  return(liste_data_par_produit)
}

```


## 2) Application de la fonction split de data_ok par nom de produit

```{r}
# Test de la fonction : data_ok de coop circuit 2021
liste_data_par_produit <- split_data_ok_par_produit(data_ok)

# Accéder au sous-dataframe pour le produit "pomme"
data_pomme <- liste_data_par_produit[["pomme"]]

# Voir tous les noms de produits
names(liste_data_par_produit)

```

